#!/bin/bash

usage() {
  echo
  echo "SYNOPSIS"
  echo "$0: [-lsd]"
  echo
  echo "DESCRIPTION"
  echo
  echo "Installs packages and configures system"
  echo
  echo "  -l Include uncommon programming languages"
  echo "  -s Include data stores"
  echo "  -d Include data science tools and languages"
  echo 
  echo "This program is idempotent, so a newer version can be run on an existing system without issues."
  echo
  exit 1
}

while getopts lsd name
do
    case $name in
    l)    extra_langs=yes;;
    s)    data_stores=yes;;
    d)    data_science_langs=yes;;
    *)    usage;;
    esac
done

editors="vim emacs nano"

# Tools
tools="git tmux gdb pandoc fish zsh"

# Server Applications
server_apps=""

if [ -n "$data_stores" ]; then
 server_apps="$server_apps postgresql postgresql-contrib sqlite3 mysql-server mongodb-server-core memcached"
fi

# Languages
python="python3 python-pip"
c="build-essential" # includes gcc, g++, and GNU make
js="nodejs npm"
r="r-base-core"
haskell="ghc"
prolog="swi-prolog"
algol="algol68g"
lisp="gcl"
scheme="mit-scheme"
ml="smlnj"

languages="$c $python $js"

if [ -n "$data_science" ]; then
	languages="$languages $r"
fi

if [ -n "$extra_langs" ]; then
	languages="$languages $haskell $prolog $algol $lisp $scheme $ml"
fi

sudo apt --quiet --assume-yes update
sudo apt -qq --assume-yes remove apparmor snapd
sudo apt --quiet --assume-yes install $editors $tools $languages $server_apps || exit 1

# Tools not in repositories

# Micro text editor
micro_version="1.4.1"
cd /tmp && wget --no-verbose https://github.com/zyedidia/micro/releases/download/v$micro_version/micro-$micro_version-linux64.tar.gz
cd /tmp && tar -xf /tmp/micro-$micro_version-linux64.tar.gz
sudo mv /tmp/micro-$micro_version/micro /usr/bin/ || exit 1

# ripgrep (rg)
rg_version="11.0.2"
cd /tmp && wget --no-verbose https://github.com/BurntSushi/ripgrep/releases/download/$rg_version/ripgrep_${rg_version}_amd64.deb
sudo dpkg -i /tmp/ripgrep_${rg_version}_amd64.deb || exit 1

# fd `find` replacement
# There is a .deb for this, but it names the bin `fdfind` as `fd` is already taken by the fdclone package
# We simply grab the binary and call it `fd`. This may cause breakage on systems using fdclone, but it
# saves users from need to alias `fd` to `fdfind`
fd_version="7.4.0"
cd /tmp && wget --no-verbose https://github.com/sharkdp/fd/releases/download/v$fd_version/fd-v${fd_version}-x86_64-unknown-linux-gnu.tar.gz
cd /tmp && tar -xf  fd-v$fd_version-x86_64-unknown-linux-gnu.tar.gz
sudo mv  fd-v$fd_version-x86_64-unknown-linux-gnu/fd /usr/bin/ || exit 1

# fzf fuzzy finder
fzf_version="0.20.0"
cd /tmp && wget --no-verbose https://github.com/junegunn/fzf-bin/releases/download/$fzf_version/fzf-$fzf_version-linux_amd64.tgz
cd /tmp && tar -xf fzf-$fzf_version-linux_amd64.tgz
sudo mv /tmp/fzf /usr/bin || exit 1

# Custom tools

for script in "addstudent" "envsetup"
do
  cd /tmp && wget --no-verbose https://raw.githubusercontent.com/jncraton/ubuntu-server-student-env/master/$script
  sudo chmod 755 /tmp/$script
  sudo mv /tmp/$script /usr/bin/ || exit 1
done

# Configure home dir privacy
chmod 750 $HOME || exit 1
